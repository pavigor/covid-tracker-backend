apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: __NAMESPACE__
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  template:
    metadata:
      labels:
        app: backend
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - image: __ECR__/__IMAGE__
          name: backend
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: url
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_name
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: __NAMESPACE__
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
